---
import type { ApiItem } from "../config/apis";

interface Props {
	apis: ApiItem[];
	selectedApiName: string | null;
}

const { apis, selectedApiName } = Astro.props;
---
<aside class="w-50 h-screen flex flex-col bg-white dark:bg-zinc-800 border-r border-gray-200 dark:border-zinc-700 overflow-hidden shrink-0" data-shade="925">
    <div class="flex-grow overflow-auto">
        {apis.length > 0 ? (
            <ul class="list-none p-0 m-0 relative">
         
                {apis.map((api) => (
                    <li class="relative group">
                        {selectedApiName === api.name && <div 
                            id="api-indicator"
                            class="absolute left-0 w-1 bg-purple-500 rounded-r transition-all duration-300 ease-in-out z-0 shadow-[0_0_8px_rgba(168,85,247,0.4)]" 
                            style="opacity: 0;"
                        />}
                        <a
                            href={`/apis/${api.name.toLowerCase()}.html`}
                            data-url={api.name}
                            class={`block w-full text-left py-3 px-4 border-l-4 text-sm transition-all duration-300 ease-in-out focus:outline-none relative overflow-hidden group cursor-pointer
                                ${selectedApiName === api.name 
                                    ? "border-l-transparent bg-zinc-200 text-zinc-900 font-medium dark:bg-zinc-700 dark:text-zinc-100 translate-x-0.5 api-selected"
                                    : "border-l-transparent text-gray-600 dark:text-zinc-300 hover:bg-zinc-100 dark:hover:bg-zinc-750 dark:hover:text-zinc-900"}`}
                        >
                            <span class={`relative z-10 transition-transform duration-300
                                ${selectedApiName === api.name ? "translate-x-1" : ""}`}>
                                {api.name}
                            </span>
                            {selectedApiName === api.name && (
                                <span class="absolute inset-0 bg-gradient-to-r from-purple-50 to-transparent dark:from-purple-900/20 dark:to-transparent transition-all duration-500 opacity-100" />
                            )}
                        </a>
                    </li>
                ))}
            </ul>
        ) : (
            <p class="text-gray-500 dark:text-zinc-400 p-2 text-center">No APIs configured.</p>
        )}
    </div>
</aside>

<script>
    // Handle the indicator positioning
    document.addEventListener('DOMContentLoaded', () => {
        const selectedItem = document.querySelector('.api-selected');
        const indicator = document.getElementById('api-indicator');
        if (selectedItem && indicator) {
            indicator.style.top = `${(selectedItem as HTMLElement).offsetTop}px`;
            indicator.style.height = `${(selectedItem as HTMLElement).offsetHeight}px`;
            indicator.style.opacity = '1';
        }
    });
</script> 
---
import { Sun, Moon, Menu } from "@lucide/astro";
import { Logo } from "../components/Logo";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<header class="navbar sticky top-0 px-6 bg-base-100 z-30 shadow-md">
    <div class="flex justify-between items-center gap-5">
        <label for="left-sidebar-drawer" class="btn btn-secondary drawer-button lg:hidden">
            <Menu class="h-5 inline-block w-5"/>
        </label>
        <a href="/" class="text-base-content no-underline flex-1">
            <Logo />
        </a>
    </div>

  <h3 class="mb-0 text-xl font-bold text-base-content flex-1 text-center">
    {title}
  </h3>
  <div class="flex-1 flex justify-end">
    <label class="toggle text-base-content cursor-pointer">
      <input type="checkbox" value="light" class="theme-controller" id="theme-toggle" />
      <Sun class="swap-off h-4 w-4" />
      <Moon class="swap-on h-4 w-4" />
    </label>
  </div>
</header>

<script>
  // Load theme from localStorage on page load
  function loadTheme() {
    const savedTheme = localStorage.getItem('theme');
    const themeToggle = document.getElementById('theme-toggle') as HTMLInputElement;
    
    if (savedTheme) {
      document.documentElement.setAttribute('data-theme', savedTheme);
      if (themeToggle) {
        themeToggle.checked = savedTheme === 'light';
      }
    } else {
      // Default to dark theme if no preference is saved
      document.documentElement.setAttribute('data-theme', 'dark');
      if (themeToggle) {
        themeToggle.checked = false;
      }
    }
  }

  // Save theme to localStorage and apply it
  function saveTheme(theme: string) {
    localStorage.setItem('theme', theme);
    document.documentElement.setAttribute('data-theme', theme);
  }

  // Initialize theme on page load
  document.addEventListener('DOMContentLoaded', () => {
    loadTheme();
    
    const themeToggle = document.getElementById('theme-toggle') as HTMLInputElement;
    if (themeToggle) {
      themeToggle.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const newTheme = target.checked ? 'light' : 'dark';
        saveTheme(newTheme);
      });
    }
  });

  // Also run immediately in case DOMContentLoaded has already fired
  loadTheme();
</script>
